#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import click
import rpt_dosi.db as rptdb
import rpt_dosi.dosimetry as do

CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])


@click.command(context_settings=CONTEXT_SETTINGS)
@click.option("--db_file", "--db", required=True, help="Input db.json")
@click.option("--cycle_id", "-c", required=True, help="Cycle to plot")
def go(db_file, cycle_id):
    # open db as a dict
    db = rptdb.db_load(db_file)

    # get cycle
    cycle = db.cycles[cycle_id]
    # injected_activity = cycle.injection.activity_MBq

    # get all roi names with activity
    roi_names = set()
    for acq in cycle.acquisitions.values():
        for r in acq.activity.keys():
            roi_names.add(r)

    # get tac for all rois
    for roi in roi_names:
        t, a = rptdb.db_get_tac(cycle, roi)
        r = do.fit_triexpo(t, a)
        print(r)

    x = np.linspace(0, lastPoint, lastPoint + 1)
    y = []
    y1bis = [y1[0], y1[1], y1[2]]
    HalfLife = 24 * 6.65
    constant = log(2) / HalfLife
    for i in range(np.shape(x)[0]):
        y.append(A1 * exp(-(-k1 + constant) * x[i]) + A2 * exp(-(-k2 + constant) * x[i]) + A3 * exp(
            -(-k3 + constant) * x[i]))


# --------------------------------------------------------------------------
if __name__ == "__main__":
    go()
