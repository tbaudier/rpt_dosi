#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import json

import click
import pydicom
import rpt_dosi.images as im
import itk
import gatetools as gt
from path import Path
import os

CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])


@click.command(context_settings=CONTEXT_SETTINGS)
@click.option("--spect", "-s", required=True, help="SPECT DICOM filename")
@click.option("--output", "-o", default=None, help="output db.json")
@click.option(
    "--cycle_id", "-c", default=None, help="Cycle id in the db such as cycle1"
)
@click.option(
    "--tp_id", "-t", default=None, help="Timepoint id in the db such as cycle1"
)
def go(spect, output, cycle_id, tp_id):
    # open dicom and extract the date/time
    ds = pydicom.read_file(spect)
    dt = im.dicom_read_acquisition_datetime(ds)
    print(f"Image acquisition date : {dt}")

    """
    (0054, 0016)  Radiopharmaceutical Information Sequence  1 item(s) ----
   (0018, 0031) Radiopharmaceutical                 LO: 'LU177'
   (0018, 1071) Radiopharmaceutical Volume          DS: '9.5'
   (0018, 1072) Radiopharmaceutical Start Time      TM: '100400.000'
   (0018, 1073) Radiopharmaceutical Stop Time       TM: '100400.000'
   (0018, 1074) Radionuclide Total Dose             DS: '7257.568359375'
   (0018, 1075) Radionuclide Half Life              DS: '574380.0'
   (0018, 1078) Radiopharmaceutical Start DateTime  DT: '20231012100400'
   (0018, 1079) Radiopharmaceutical Stop DateTime   DT: '20231012100400'
   (0054, 0300)  Radionuclide Code Sequence  1 item(s) ----
      (0008, 0100) Code Value                          SH: 'C-101ED'
      (0008, 0102) Coding Scheme Designator            SH: 'SCT'
      (0008, 0104) Code Meaning                        LO: '^177^Lutetium'
      ---------
   (0054, 0304)  Radiopharmaceutical Code Sequence  1 item(s) ----
      (0008, 0100) Code Value                          SH: 'C-B1000'
      (0008, 0102) Coding Scheme Designator            SH: 'SCT'
      (0008, 0104) Code Meaning                        LO: '?Diagnostic radioisotope'
    """

    # output
    if output is not None:
        with open(output, "r") as f:
            data = json.load(f)
            d = data["cycles"][cycle_id]
            print(d)


# --------------------------------------------------------------------------
if __name__ == "__main__":
    go()
